#!/usr/bin/env python3

from collections import defaultdict

example_input = """
seeds: 79 14 55 13

seed-to-soil map:
50 98 2
52 50 48

soil-to-fertilizer map:
0 15 37
37 52 2
39 0 15

fertilizer-to-water map:
49 53 8
0 11 42
42 0 7
57 7 4

water-to-light map:
88 18 7
18 25 70

light-to-temperature map:
45 77 23
81 45 19
68 64 13

temperature-to-humidity map:
0 69 1
1 0 69

humidity-to-location map:
60 56 37
56 93 4
"""

def parse_map(piece):
    lines = piece.splitlines()
    name = lines[0].split(" ")[0]
    a, z = name.split("-to-")
    mappings = []
    for line in lines[1:]:
        mappings.append(tuple([int(x) for x in line.split(" ")]))
    return a,z,mappings

def parse(inp):
    pieces = inp.split("\n\n")
    seeds_str = pieces.pop(0).removeprefix("\nseeds: ")
    seeds = [int(x) for x in seeds_str.split(" ")]
    needs = {}
    for piece in pieces:
        a, z, m = parse_map(piece)
        needs[a] = (z, m)
    almanac = (seeds, needs)
    return almanac

parse(example_input)

def find(almanac, a, an, z):
    if a == z:
        return an


def needs1(almanac, a, an):
    z, m = almanac[a]
